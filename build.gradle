buildscript {
	repositories {
		mavenCentral()
		maven { url "https://jitpack.io" }
		google()
		jcenter()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:3.2.0'
		classpath 'com.github.alxndrsn:android-check:1f87548c0686d823e5f1490a2053b70bd9f5022e'
	}
}
apply plugin: 'com.android.application'
apply plugin: 'com.noveogroup.android.check'

// enable verbose lint warnings
gradle.projectsEvaluated {
	tasks.withType(JavaCompile) {
		options.compilerArgs << '-Xlint:deprecation'
	}
}

repositories {
	mavenCentral()
	maven { url 'https://download.01.org/crosswalk/releases/crosswalk/android/maven2' }
	jcenter()
	maven { url "https://jitpack.io" }
	google()
}

dependencies {
	implementation fileTree(dir: 'libs', include: ['*.jar'])
	implementation 'org.xwalk:xwalk_core_library:23.53.589.4:arm@aar'
	implementation 'com.simprints:LibSimprints:1.0.11'
	implementation 'com.github.Mariovc:ImagePicker:1.2.2'

	testImplementation 'junit:junit:4.12'
	testImplementation 'com.google.android:android-test:4.1.1.4'
	testImplementation 'org.robolectric:robolectric:3.8'
}

def simprintsApiKey, simprintsModuleId, simprintsUserId

def getVersionCode = {
	if(System.env.JENKINS == 'true') {
		def versionParts = System.env.VERSION_TO_BUILD.split(/\./)
		if(versionParts.length != 3)
			throw new RuntimeException("Unexpected version number - should be of form 'x.y.z', but was: $System.env.VERSION_TO_BUILD")
		versionParts = versionParts.collect { Integer.parseInt(it) }
		if(versionParts[1] > 999 || versionParts[2] > 999)
			throw new RuntimeException('Version part greater than 999 not allowed.')
		int versionCode = (1000000 * versionParts[0]) +
				  (1000 * versionParts[1]) +
				  versionParts[2]
		if(versionCode > 2100000000)
			throw new RuntimeException('versionCode biggger than max allowed by Google Play.')
		return versionCode
	}
	return 1
}
def getVersionName = {
	System.env.VERSION_TO_BUILD ?: 'SNAPSHOT'
}

android {
	compileSdkVersion 26
	buildToolsVersion '28.0.2'
	packagingOptions {
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/NOTICE'
	}

	defaultConfig {
		versionCode getVersionCode()
		versionName getVersionName()
		archivesBaseName = "${project.name}-${versionName}"
	}

	applicationVariants.all {
		buildConfigField "boolean", "DISABLE_APP_URL_VALIDATION", "Boolean.parseBoolean(\"${System.env.DISABLE_APP_URL_VALIDATION}\")";
		buildConfigField "String", "LOG_TAG", '"MedicMobile"'

		if(System.env.SIMPRINTS_API_KEY) {
			buildConfigField "String", "SIMPRINTS_API_KEY", /"${System.env.SIMPRINTS_API_KEY}"/
		} else if(simprintsApiKey) {
			buildConfigField "String", "SIMPRINTS_API_KEY", /"${simprintsApiKey}"/
		} else {
			buildConfigField "String", "SIMPRINTS_API_KEY", /"Medic's API Key"/
		}

		if(System.env.SIMPRINTS_USER_ID) {
			buildConfigField "String", "SIMPRINTS_USER_ID", /"${System.env.SIMPRINTS_USER_ID}"/
		} else if(simprintsUserId) {
			buildConfigField "String", "SIMPRINTS_USER_ID", /"${simprintsUserId}"/
		} else {
			buildConfigField "String", "SIMPRINTS_USER_ID", '"some-user-id"'
		}

		if(System.env.SIMPRINTS_MODULE_ID) {
			buildConfigField "String", "SIMPRINTS_MODULE_ID", /"${System.env.SIMPRINTS_MODULE_ID}"/
		} else if(simprintsModuleId) {
			buildConfigField "String", "SIMPRINTS_MODULE_ID", /"${simprintsModuleId}"/
		} else {
			buildConfigField "String", "SIMPRINTS_MODULE_ID", '"Medic Module ID"'
		}
	}

	signingConfigs {
		release {
			storeFile file(System.env.ANDROID_KEYSTORE_PATH ?: signingConfigs.debug.storeFile)
			storePassword System.env.ANDROID_KEYSTORE_PASSWORD ?: signingConfigs.debug.storePassword
			keyAlias System.env.ANDROID_KEY_ALIAS ?: signingConfigs.debug.keyAlias
			keyPassword System.env.ANDROID_KEY_PASSWORD ?: signingConfigs.debug.keyPassword
		}
	}

	buildTypes {
		debug {
			testCoverageEnabled = true
		}
		release {
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'config/xwalk.pro', 'config/libsimprints.pro'
			shrinkResources true
			signingConfig signingConfigs.release
		}
	}

	check {
		abortOnError true
	}

	lintOptions {
		lintConfig = new File('config/lint.xml')

		disable 'UnusedResources' // linter can't handle static imports, so just skip this test
		disable 'GradleDependency' // TODO update to latest support-v4 lib and re-enable this rule

		warningsAsErrors true

		xmlReport false

		if(System.env.TRAVIS == 'true') {
			abortOnError true
			htmlReport false
			textReport true
			textOutput 'stdout'
		}
	}

	flavorDimensions 'brand'
	productFlavors {
		unbranded {
			// we will not create project-specific src directories
			// for `unbranded` - it will use the defaults in
			// src/main

			simprintsApiKey = 'f4c47c4e-d6ee-444f-b16e-22a4761b1f3c'
			simprintsModuleId = 'simprints.app'
			simprintsUserId = 'test@simprints.app'
		}
		medicmobiledemo {
			applicationId = 'org.medicmobile.webapp.mobile.medicmobiledemo'
		}

		bracuganda {
			applicationId = 'org.medicmobile.webapp.mobile.bracuganda'
		}
		cic_guatemala {
			applicationId = 'org.medicmobile.webapp.mobile.cic_guatemala'
		}
		ebpp_indonesia {
			applicationId = 'org.medicmobile.webapp.mobile.ebpp_indonesia'
		}
		hope_through_health {
			applicationId = 'org.medicmobile.webapp.mobile.hope_through_health'
		}
		livinggoods {
			applicationId = 'org.medicmobile.webapp.mobile.livinggoods'
		}
		livinggoodskenya {
			applicationId = 'org.medicmobile.webapp.mobile.livinggoodskenya'
		}
		livinggoods_innovation_ke {
			applicationId = 'org.medicmobile.webapp.mobile.livinggoods_innovation_ke'
		}
		livinggoods_innovation_ke_supervisor {
			applicationId = 'org.medicmobile.webapp.mobile.livinggoods_innovation_ke_supervisor'
		}
		livinggoods_innovation_ke_hivst {
			applicationId = 'org.medicmobile.webapp.mobile.livinggoods_innovation_ke_hivst'
		}
		livinggoods_assisted_networks {
			applicationId = 'org.medicmobile.webapp.mobile.livinggoods_assisted_networks'
		}
		moh_kenya_siaya_white {
			applicationId = 'org.medicmobile.webapp.mobile.moh_kenya_siaya'
		}
		moh_kenya_siaya_red {
			applicationId = 'org.medicmobile.webapp.mobile.moh_kenya_siaya_red'
		}
		moh_kenya_siaya_green {
			applicationId = 'org.medicmobile.webapp.mobile.moh_kenya_siaya_green'
		}
		moh_kenya_siaya_black {
			applicationId = 'org.medicmobile.webapp.mobile.moh_kenya_siaya_black'
		}
		musomali {
			applicationId = 'org.medicmobile.webapp.mobile.musomali'
		}
		simprints {
			applicationId = 'org.medicmobile.webapp.mobile.simprints'

			simprintsApiKey = 'f4c47c4e-d6ee-444f-b16e-22a4761b1f3c'
			simprintsModuleId = 'simprints.app'
			simprintsUserId = 'test@simprints.app'
		}
		vhw_burundi {
			applicationId = 'org.medicmobile.webapp.mobile.vhw_burundi'
		}
	}
}
