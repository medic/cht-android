# GitLab CI/CD configuration for Android app
stages:
  - build
  - test
  - release

# Cache Gradle dependencies to speed up builds
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .gradle/
    - build/
    - app/build/

# Define variables
variables:
  ANDROID_COMPILE_SDK: "34"
  GRADLE_OPTS: "-Xmx2g -Dorg.gradle.jvmargs=-Xmx2g"
  APP_VERSION_SIMPLE: "v1.0.${CI_PIPELINE_IID}"
  APP_VERSION_SIMPLE_PROD: "v1.5.${CI_PIPELINE_IID}"
  ANDROID_KEYSTORE_PATH:
  ANDROID_KEYSTORE_PASSWORD:
  ANDROID_KEY_ALIAS:
  ANDROID_KEY_PASSWORD:

# Job to build the debug APK
build_debug:
  stage: build
  image: ubuntu:22.04
  tags:
    - ANDROID
  before_script:
    - apt-get update && apt-get install -y openjdk-17-jdk wget unzip
    - export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
    - export PATH=$JAVA_HOME/bin:$PATH
    - export ANDROID_HOME=/android-sdk
    - mkdir -p $ANDROID_HOME
    - wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O tools.zip
    - unzip -q tools.zip -d $ANDROID_HOME/cmdline-tools
    - mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
    - yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
    - $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" "build-tools;${ANDROID_COMPILE_SDK}.0.0"
  script:
    - export RELEASE_VERSION="$APP_VERSION_SIMPLE"
    - ./gradlew assembleChis_kenya
    - ./gradlew assembleMoh_kenya_echis
    - ./gradlew bundleChis_kenya
    - ./gradlew bundleMoh_kenya_echis
  artifacts:
    paths:
      - /builds/echis-core/cht-android/build/outputs/bundle/chis_kenyaDebug/*.aab
      - /builds/echis-core/cht-android/build/outputs/bundle/moh_kenya_echisDebug/*.aab
      - /builds/echis-core/cht-android/build/outputs/apk/chis_kenya/debug/*.apk
      - /builds/echis-core/cht-android/build/outputs/apk/moh_kenya_echis/debug/*.apk
    expire_in: 1 week
  only:
    - branches
    - merge_requests

# Job to run unit tests
test:
  stage: test
  image: ubuntu:22.04
  tags:
    - ANDROID
  before_script:
    - apt-get update && apt-get install -y openjdk-17-jdk wget unzip
    - export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
    - export PATH=$JAVA_HOME/bin:$PATH
    - export ANDROID_HOME=/android-sdk
    - mkdir -p $ANDROID_HOME
    - wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O tools.zip
    - unzip -q tools.zip -d $ANDROID_HOME/cmdline-tools
    - mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
    - yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
    - $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" "build-tools;${ANDROID_COMPILE_SDK}.0.0"
  script:
    - ./gradlew testChis_kenyaDebugUnitTest
    - ./gradlew testChis_kenyaReleaseUnitTest
    - ./gradlew testMoh_kenya_echisDebugUnitTest
    - ./gradlew testMoh_kenya_echisDebugUnitTest
  artifacts:
    paths:
      - /builds/echis-core/cht-android/build/test-results/
    expire_in: 1 week
  only:
    - branches
    - merge_requests

# Job to build release APK (requires signing keys)
release_prod_apk:
  stage: release
  image: ubuntu:22.04
  tags:
    - ANDROID

  before_script:
    - apt-get update && apt-get install -y openjdk-17-jdk wget unzip
    - export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
    - export PATH=$JAVA_HOME/bin:$PATH
    - export ANDROID_HOME=/android-sdk
    - mkdir -p $ANDROID_HOME
    - wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O tools.zip
    - unzip -q tools.zip -d $ANDROID_HOME/cmdline-tools
    - mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
    - yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
    - $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" "build-tools;${ANDROID_COMPILE_SDK}.0.0"
  script:
    - echo "$KEYSTORE_FILE_PROD" | base64 -d > moh_kenya_echis.keystore
    - export RELEASE_VERSION="$APP_VERSION_SIMPLE_PROD"
    - export ANDROID_KEYSTORE_PASSWORD="$KEYSTORE_PROD_PASSWORD"
    - export ANDROID_KEY_ALIAS="$KEY_ALIAS"
    - export ANDROID_KEY_PASSWORD="$KEY_PROD_PASSWORD"
    - export ANDROID_KEYSTORE_PATH="/builds/echis-core/cht-android/moh_kenya_echis.keystore"
    - ./gradlew assembleMoh_kenya_echis
    - ./gradlew bundleMoh_kenya_echis
  artifacts:
    paths:
      - /builds/echis-core/cht-android/build/outputs/apk/moh_kenya_echis/release/*.apk
      - /builds/echis-core/cht-android/build/outputs/bundle/moh_kenya_echisRelease/*.aab
  only:
    - main
    - master

release_training_apk:
  stage: release
  image: ubuntu:22.04
  tags:
    - ANDROID

  before_script:
    - apt-get update && apt-get install -y openjdk-17-jdk wget unzip
    - export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
    - export PATH=$JAVA_HOME/bin:$PATH
    - export ANDROID_HOME=/android-sdk
    - mkdir -p $ANDROID_HOME
    - wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O tools.zip
    - unzip -q tools.zip -d $ANDROID_HOME/cmdline-tools
    - mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
    - yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
    - $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" "build-tools;${ANDROID_COMPILE_SDK}.0.0"
  script:
    - echo "$KEYSTORE_FILE" | base64 -d > chis_kenya.keystore
    - export RELEASE_VERSION="$APP_VERSION_SIMPLE"
    - export ANDROID_KEYSTORE_PASSWORD="$KEYSTORE_PASSWORD"
    - export ANDROID_KEY_ALIAS="$KEY_ALIAS"
    - export ANDROID_KEY_PASSWORD="$KEY_PASSWORD"
    - export ANDROID_KEYSTORE_PATH="/builds/echis-core/cht-android/chis_kenya.keystore"
    - ./gradlew assembleChis_kenya
    - ./gradlew bundleChis_kenya
  artifacts:
    paths:
      - /builds/echis-core/cht-android/build/outputs/apk/chis_kenya/release/*.apk
      - /builds/echis-core/cht-android/build/outputs/bundle/chis_kenyaRelease/*.aab
  only:
    - training
